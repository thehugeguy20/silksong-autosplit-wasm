name: Build

on:
  pull_request:
  push:
    branches:
      - 'master'
    tags:
      - '*'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        label:
          - Stable
          - Unstable
        include:
          - label: Stable
            postfix: _stable
            features: '""'
            sleep: 0
          - label: Unstable
            postfix: _unstable
            features: '"unstable"'
            sleep: 10
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v4

      - name: Install Rust
        uses: hecrj/setup-rust-action@v2
        with:
          rust-version: stable
          targets: wasm32-unknown-unknown

      - name: Build
        run: |
          cargo b --release --locked --features ${{matrix.features}}
          ls -lh target/wasm32-unknown-unknown/release/silksong_autosplit_wasm.wasm

      - name: Prepare Release
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          cp target/wasm32-unknown-unknown/release/silksong_autosplit_wasm.wasm silksong_autosplit_wasm${{matrix.postfix}}.wasm
          sleep ${{matrix.sleep}}

      - name: Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: silksong_autosplit_wasm*.wasm

  clippy:
    name: Check clippy lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v4

      - name: Install Rust
        uses: hecrj/setup-rust-action@v2
        with:
          components: clippy
          targets: wasm32-unknown-unknown

      - name: Run Clippy
        run: cargo clippy --all-features -- -A clippy::nonminimal_bool

  format:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v4

      - name: Install Rust
        uses: hecrj/setup-rust-action@v2
        with:
          components: rustfmt

      - name: Run cargo fmt
        run: cargo fmt -- --check || true
